{
  "swagger": "2.0",
  "info": {
    "description": "This is Task-Manager app",
    "version": "1.0.0",
    "title": "Task Manager",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "tags": [
    {
      "name": "users",
      "description": "Everything about users requests"
    },
    {
      "name": "tasks",
      "description": "Everything about Tasks"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create users",
        "description": "Creating a user",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that has to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBodyParameter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Login using email and password",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Logging in with your credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBodyLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Succesful"
          },
          "400": {
            "description": "Try again"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logout current account",
        "description": "Logs out current user",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logged Out"
          },
          "401": {
            "description": "Unauthorised"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/logoutAll": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Logout current account from all devices",
        "description": "Logout current account from all devices",
        "operationId": "logoutAllSessions",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Try again"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/me/avatar": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add user avatar",
        "description": "Add a user avatar",
        "operationId": "addAvatar",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Upload avatar picture",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Avatar added"
          },
          "500": {
            "description": "Try again"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete avatar picture",
        "description": "Delete avatar picture",
        "operationId": "deleteUserAvatar",
        "responses": {
          "200": {
            "description": "Avatar deleted succesfully"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read singular user",
        "description": "Read a user by it's id",
        "operationId": "readUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id value",
            "required": true,
            "type": "string",
            "format": "string",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserBodyParameter"
            }
          },
          "400": {
            "description": ""
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Read your profile",
        "description": "Get your profile info",
        "operationId": "getYourProfile",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserBodyResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update your profile",
        "description": "Update your profile info",
        "operationId": "updateProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Profile information to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBodyResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been updated"
          },
          "400": {
            "description": "Not a valid operation"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete your profile",
        "description": "Delete your profile",
        "operationId": "deleteYourProfile",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Profile deleted",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserBodyResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized Please authenticate"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create a task",
        "description": "Create a task",
        "operationId": "uploadFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task object that has to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task created",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get all tasks",
        "description": "",
        "operationId": "getAllTasks",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get task by id",
        "description": "Get task by id",
        "operationId": "getTaskById",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to read",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Update a task by id",
        "description": "Update a task",
        "operationId": "updateTaskById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to update",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Delete a task by id",
        "description": "",
        "operationId": "deleteTaskById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to read",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "UserBodyResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "object",
          "format": "Int64"
        },
        "age": {
          "type": "integer",
          "format": "Int32"
        },
        "name": {
          "type": "string",
          "format": "String"
        },
        "email": {
          "type": "string",
          "format": "String"
        },
        "tokens": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "token": {
                "type": "integer"
              }
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "Date"
        },
        "avatar": {
          "type": "string",
          "format": "Binary"
        },
        "upatedAt": {
          "type": "string",
          "format": "Date"
        },
        "password": {
          "type": "string",
          "format": "String"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "UserBodyParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "String"
        },
        "email": {
          "type": "string",
          "format": "String"
        },
        "password": {
          "type": "string",
          "format": "String"
        }
      }
    },
    "UserBodyLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "String"
        },
        "password": {
          "type": "string",
          "format": "String"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "integer",
          "format": "int64"
        },
        "completed": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "format": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
